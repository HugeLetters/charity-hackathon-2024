---
import Schematic from "@components/shared/Schematic.astro";
import MainSegment from "@components/shared/MainSegment.astro";
import SectionTitle from "@components/shared/SectionTitle.astro";
import { Image } from "astro:assets";
import vid1 from "./assets/video1.mp4";
import vid2 from "./assets/video2.mp4";
import vid3 from "./assets/video3.mp4";
import vid1Preview from "./assets/vid1.jpg";
import vid2Preview from "./assets/vid2.jpg";
import vid3Preview from "./assets/vid3.jpg";
---

<script>
	const tabsContainer = document.getElementById("process-tabs-content")!;
	const tabsBtns =
		tabsContainer.querySelectorAll<HTMLButtonElement>("button.tabs__btn");
	const videoPlaceholder = document.querySelector<HTMLImageElement>(
		"img.media__vid-content"
	)!;

	const playBtn = document.querySelector<HTMLButtonElement>(
		"button[data-id=media__play-btn]"
	)!;
	const videoPlayer = document.querySelector<HTMLVideoElement>(
		"video#process-video-player"
	)!;

	const videoModal = document.querySelector<HTMLDialogElement>(
		"dialog#video-player-modal"
	)!;
	const modalCloseBtn = videoModal.querySelector("button")!;

	for (const btn of tabsBtns) {
		btn.addEventListener("click", () => {
			tabsBtns.forEach((el) => {
				el.classList.remove("tabs__btn--active");
			});

			btn.classList.add("tabs__btn--active");
			videoPlaceholder.src = btn.dataset.videoPreview!;
			videoPlayer.src = btn.dataset.video!;
		});
	}

	function stopVideo() {
		videoPlayer.pause();
		setTimeout(() => {
			videoPlayer.currentTime = 0;
		}, 400);
	}

	playBtn.addEventListener("click", () => {
		videoModal.showModal();
		videoPlayer.play();
	});

	modalCloseBtn.addEventListener("click", () => {
		stopVideo();
		videoModal.close();
	});

	videoModal.addEventListener("close", stopVideo);
</script>

<MainSegment>
	<dialog id="video-player-modal">
		<video
			id="process-video-player"
			class="video"
			src={vid1}
			controls
		></video>
		<button class="modal-close-btn">Close</button>
	</dialog>
	<div class="process">
		<div class="process__title-wrapper">
			<SectionTitle>How To Process</SectionTitle>
		</div>
		<h3 class="process__subtitle">Steps in the Construction Process</h3>

		<!-- Активный элемент (таб) - tabs__btn--active -->
		<div
			class="tabs"
			id="process-tabs-content"
		>
			<button
				data-video={vid1}
				data-video-preview={vid1Preview.src}
				class="tabs__btn tabs__btn--active"
				type="button"
			>
				01. Planning and Design
			</button>

			<button
				data-video={vid2}
				data-video-preview={vid2Preview.src}
				class="tabs__btn"
				type="button"
			>
				02. Permitting and Approvals
			</button>

			<button
				data-video={vid3}
				data-video-preview={vid3Preview.src}
				class="tabs__btn"
				type="button"
			>
				03. Foundation Construction
			</button>
		</div>

		<div class="media">
			<div class="media__vid-wrapper">
				<Image
					class="media__vid-content"
					alt=""
					src={vid1Preview}
				/>

				<button
					class="media__play-btn"
					data-id="media__play-btn"
					type="button"
				>
					<svg
						height="3rem"
						viewBox="0 0 21 31"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path
							d="M21 15.5L0 31V0L21 15.5Z"
							fill="white"
						></path>
					</svg>
					<span class="visually-hidden">Play video</span></button
				>
			</div>
		</div>
	</div>
	<Schematic rotation="left" />
</MainSegment>

<style>
	.process {
		grid-column: 2 / 3;
		width: 100%;
		max-width: 1296px;

		font-family: var(--font-jost);
		color: var(--color-text-primary);
		text-align: center;
	}

	.process__title-wrapper {
		display: flex;
		justify-content: center;
		margin-bottom: 15px;
	}

	.process__subtitle {
		font-size: 52px;
		font-weight: 600;
		line-height: 62px;
		margin-bottom: 37px;
	}

	.tabs {
		display: flex;
		gap: 24px;
		justify-content: space-between;
		margin-bottom: 90px;
	}

	.tabs__btn {
		font-size: 24px;
		font-weight: 600;
		line-height: 34px;
		border: 1px solid rgba(85, 85, 85, 0.2);
		padding: 23px 0;
		flex: 1;
	}

	.tabs__btn--active {
		position: relative;
		background-color: var(--color-brand-primary);
		color: #fff;
		border: none;
	}

	.tabs__btn--active::after {
		position: absolute;
		content: "";
		display: block;
		left: 50%;
		bottom: -12px;
		width: 36px;
		height: 12px;
		transform: translateX(-50%);
		background-color: var(--color-brand-primary);
		clip-path: polygon(0 0, 100% 0, 50% 100%);
	}

	.media__vid-wrapper {
		width: 100%;
		max-width: 1296px;
		position: relative;
	}

	.media__vid-content {
		width: 100%;
		height: 541px;
		object-fit: cover;
	}

	.media__play-btn {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		display: flex;
		align-items: center;
		justify-content: center;
		width: 120px;
		height: 120px;
		background-color: var(--color-brand-primary);
		border-radius: 50%;
		transition: all 0.2s linear 0s;
		z-index: 1;
	}

	.media__play-btn:hover {
		transform: translate(-50%, -50%) scale(0.8);
	}

	.video {
		width: 80vw;
	}

	#video-player-modal {
		z-index: 4;
		transition-property: overlay, translate, display;
		transition-duration: 500ms;
		transition-behavior: allow-discrete;
		translate: 0 100vh;

		padding: 1rem;
		border-radius: 1rem;
		border: 0.5rem solid var(--color-brand-primary);

		display: grid;
	}

	#video-player-modal::backdrop {
		transition-property: background-color;
		transition-duration: 400ms;
	}
	#video-player-modal:not([open])::backdrop {
		transition-delay: 100ms;
	}

	#video-player-modal[open] {
		translate: 0;

		@starting-style {
			translate: 0 100vh;
		}
	}

	#video-player-modal[open]::backdrop {
		background-color: #000c;

		@starting-style {
			background-color: transparent;
		}
	}

	#process-video-player,
	.modal-close-btn {
		grid-area: 1 / -1;
	}

	.modal-close-btn {
		z-index: 2;
		align-self: start;
		justify-self: end;
		display: block;
		font-weight: 600;
		font-family: var(--font-jost);
		padding: 1.1rem 2.1rem;
		width: fit-content;

		transition-duration: 200ms;
		transition-property: background, color, outline;
		background: var(--color-brand-primary);
		color: white;
	}
</style>
